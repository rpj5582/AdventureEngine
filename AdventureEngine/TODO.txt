TODAY:
-Make Sphere and OBB collision
-Put collision detection functions in a PhysicsSystem class
-Make a RenderSystem class to handle rendering
-The Scene's addObject function should check for all different component types, and add them to their appropriate lists

IDEAS:
-Shadows
-Deferred rendering
-Day and night cycle
-Collision detection
-Collision resolution
-Rigidbody physics
-Make materials load in with json?

BUSY WORK:
-Separate AssetManager into multiple asset managers, and have one master AssetManager that controls them all
-Have multiple planes of water?

BUGS:
-Alpha blending is bugged

OPTIMIZATIONS:
-Draw objects that use the same textures and models in order (Order object lists to maximize efficiency)
-Use object and component arrays for iteration rather than arrays of pointers for cache optimization